type Anime {
  id: Int!
  title: String!
  created_at: String!
  updated_at: String!
  Releases: [Release!]!
}

"""Episode schema."""
type Episode {
  id: Int!

  """Thumbnail of this category"""
  thumbnail: String

  """Episode order E.g: 'Episode #1'"""
  episode_order: Int!

  """Episode file UUID Key code"""
  episode_code: String!

  """What is the episode before this one ?"""
  EarlierEpisode: Episode

  """What is the episode after this one ?"""
  LaterEpisode: Episode

  """The Release that this episode belongs to"""
  Release: Release!

  """Versions of this episode in different Languages, and Sources."""
  EpisodeSubtitles: [EpisodeSubtitle!]!
}

type EpisodePaginatedList {
  rows: [Episode!]!
  count: Int!
}

input EpisodesFilter {
  release_id: Int
}

"""
EpisodeSubtitle belongs to an Episode,
and an Episode might have multiple EpisodeSubtitles based on available Languages
"""
type EpisodeSubtitle {
  id: Int!

  """Title of this episode, in the expected language"""
  subtitle_code: String!

  """Language of this episode"""
  Language: Language!
}

"""Genre schema."""
type Genre {
  id: Int!

  """Title of this genre"""
  title: String!

  """Thumbnail of this category"""
  thumbnail: String
}

type GenrePaginatedList {
  rows: [Genre!]!
  count: Int!
}

input GenresFilter {
  title: String
}

"""Language schema"""
type Language {
  id: Int!

  """Name of the language e.g: 'Spanish'"""
  name: String!

  """Corresponding ISO code"""
  iso_code: String!
}

type Mutation {
  """
  Marks x episode as "seen"
  """
  EpisodeSeen(episode_id: Int!): Boolean!
}

type Query {
  Anime(id: Int): Anime
  Episode(id: Int): Episode
  Episodes(filter: EpisodesFilter, limit: Int = 10, offset: Int = 0): EpisodePaginatedList!

  """The most watched episodes"""
  HottestEpisodes(limit: Int = 5, offset: Int = 0): EpisodePaginatedList!

  """Get the newest episodes available"""
  NewestEpisodes(limit: Int = 8, offset: Int = 0): EpisodePaginatedList!
  Genre(id: Int): Genre
  Genres(filter: GenresFilter, limit: Int = 8, offset: Int = 0): GenrePaginatedList!
  Release(id: Int): Release
  Releases(filter: ReleasesFilter, limit: Int = 10, offset: Int = 0): ReleasePaginatedList!
  RandomRelease: Release
  AiringReleases: [Release!]!
}

"""Release schema."""
type Release {
  id: Int!

  """
  E.g: This Release is the 2nd installment on the One Punch Man Franchise
  """
  release_order: Int!

  """
  Title of the Release (Optional when releases have no particular name) \n
  E.g Tokyo Ghoul:re
  """
  title: String

  """
  When the release started airing (Which will be the release date in the case of a Movie)
  """
  started_airing: String!

  """
  When the release finished airing (Not aplicable to Movies, OVAs, etc...)
  """
  stopped_airing: String

  """Poster image file for this Release"""
  poster: String

  """Background image file for this Release"""
  background: String

  """When you only need the count of episodes and no actual episode data"""
  EpisodeCount: Int!

  """Returns the latest episode of this Release"""
  LatestEpisode: Episode

  """Episodes of this release"""
  Episodes(limit: Int = 10, offset: Int = 0): EpisodePaginatedList!

  """List of descriptions of this Release in many languages"""
  Descriptions: [ReleaseDescription!]!

  """This Release belongs to this Anime"""
  Anime: Anime!

  """Genres that this release fits into"""
  Genres: [Genre!]!

  """Is this release a Season, Movie, OVA or Special ?"""
  ReleaseType: ReleaseType!
}

"""ReleaseDescription schema."""
type ReleaseDescription {
  id: Int!

  """Text body of this description model"""
  description: String!

  """Language support of this description"""
  Language: Language!
}

type ReleasePaginatedList {
  rows: [Release!]!
  count: Int!
}

input ReleasesFilter {
  anime_id: Int
  title: String
  Genres: [Int!]
}

"""
ReleaseType schema. Releases can be Releases, Movies, OVAs, Specials ....
"""
type ReleaseType {
  id: Int!

  """Title of this Release Type"""
  title: String!
}

